<% include ../partials/table-header %>

<style>
  .form-create {
    /* background: rgb(230, 230, 230); */
  }
  .form-update {
    background: lightgreen;
  }

  table, tbody, tr, td {
    border: 1px solid black;
  }

  .notes ul {
    list-style: none;
  }

  .notes ul li:before {
    content: '\2714\0020';
  }
</style>

<body>
  <% include ../partials/nav %>

  <div class="uk-margin">
    <a href="/" class="uk-button uk-button-danger" type="button">
      <span uk-icon="icon: arrow-left"></span> Back
    </a>
  </div>

  <div class="uk-container uk-card uk-card-default uk-card-body uk-box-shadow-large uk-margin-auto uk-animation-fade"
    style="width:50%;">

    <h1 class="uk-margin uk-text-center uk-text-primary">Upload Product Excel</h1>

    <div class="js-upload" uk-form-custom>
      <input id="file-excel" type="file" single>
      <button id="file-button" class="uk-button uk-button-primary uk-align-center" type="button" tabindex="-1">SELECT EXCEL FILE..</button>
      <span class="file-name"></span>
    </div>

    <hr class="uk-divider-icon">

    <div class="notes">
      <h3>Modifikasi</h3>
      <ul>
        <li>No. Barang</li>
        <li>Deskripsi Barang</li>
        <li>Kuantitas</li>
      </ul>
      <h3>Export Settings</h3>
      <ul>
        <li>Continuous</li>
        <li>WYSIWYG</li>
        <li>As text</li>
        <li>Fast Export</li>
      </ul>
    </div>

  </div>

  <table style="display:none">
    <tbody>

    </tbody>
  </table>

  <% include ../partials/script %>
  <script src="/javascripts/libs/xls.js"></script>
  <script src="/javascripts/libs/xls-parser.js"></script>
  <script src="/javascripts/libs/jszip.js"></script>
  <script src="/javascripts/product-mapping.js"></script>
  <script>
    XLSParser.onParsed(async (rows) => {
      if (rows[1][0] !== 'Daftar Barang') {
        console.log('Invalid Excel File')
        UIkit.notification.closeAll()
        UIkit.notification('<span uk-icon="icon: ban"></span> Invalid Excel File')
        return
      }

      rows = rows.filter(row => 
              row[1] !== 'No. Barang' && 
              !['ONGKOS', 'PPN', 'SHIPPING FEE / HANDLING FEE'].includes(row[4]) &&
              Object.keys(row).length === 3 && 
              ((row[1] || []).length >= 3 != (row[2] || []).length >= 3) )
      rows = rows.map(row => row.filter(cell => cell))
      
      let newProducts = rows.map(row => Object.assign({}, { name: ProductMapping.map(row[1]) }))
      console.log(newProducts)
      
      // $('table').show()
      $('tbody').empty()
      rows.forEach((row, index) => {
        let $tr = $('<tr>').append($('<td>').text(index))
        row.forEach(cell => {
          $tr.append($('<td>').text(cell))
        })
        $('tbody').append($tr)
      })
      
      UIkit.notification.closeAll()
      UIkit.notification('<span uk-icon="icon: cog"></span> Saving..')
      $('#file-button').text('Please wait..').attr('disabled', true)
      try {  
        // AJAX create bulk
        let fetchedProducts = await $.post(`/products/api/bulk`, {
          products: newProducts
        })
        console.log(fetchedProducts)
        UIkit.notification.closeAll()
        UIkit.notification('<span uk-icon="icon: check"></span> Added all')
      } catch (err) {
        console.log('error', err)
        UIkit.notification.closeAll()
        UIkit.notification('<span uk-icon="icon: ban"></span> Error / Duplicate Products')
      } finally {
        $('#file-button').text('Select Excel File..').attr('disabled', false)
      }
    })
  </script>
</body>

<% include ../partials/footer %>